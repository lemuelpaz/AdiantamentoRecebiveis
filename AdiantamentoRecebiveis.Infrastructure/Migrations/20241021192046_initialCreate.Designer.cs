// <auto-generated />
using System;
using AdiantamentoRecebiveis.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdiantamentoRecebiveis.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241021192046_initialCreate")]
    partial class initialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdiantamentoRecebiveis.Domain.Entities.Cart", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int>("CorporateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CorporateId");

                    b.ToTable("cart");
                });

            modelBuilder.Entity("AdiantamentoRecebiveis.Domain.Entities.Corporate", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FaturamentoMensal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Limite")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoRamo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("corporates");
                });

            modelBuilder.Entity("AdiantamentoRecebiveis.Domain.Entities.NotasFiscais", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("CartId")
                        .HasColumnType("int");

                    b.Property<int?>("CorporateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Numero")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorLiquido")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("CorporateId");

                    b.ToTable("notasFiscais");
                });

            modelBuilder.Entity("AdiantamentoRecebiveis.Domain.Entities.Cart", b =>
                {
                    b.HasOne("AdiantamentoRecebiveis.Domain.Entities.Corporate", "Corporate")
                        .WithMany()
                        .HasForeignKey("CorporateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Corporate");
                });

            modelBuilder.Entity("AdiantamentoRecebiveis.Domain.Entities.NotasFiscais", b =>
                {
                    b.HasOne("AdiantamentoRecebiveis.Domain.Entities.Cart", null)
                        .WithMany("NotasFiscais")
                        .HasForeignKey("CartId");

                    b.HasOne("AdiantamentoRecebiveis.Domain.Entities.Corporate", "Corporate")
                        .WithMany("NotasFiscais")
                        .HasForeignKey("CorporateId");

                    b.Navigation("Corporate");
                });

            modelBuilder.Entity("AdiantamentoRecebiveis.Domain.Entities.Cart", b =>
                {
                    b.Navigation("NotasFiscais");
                });

            modelBuilder.Entity("AdiantamentoRecebiveis.Domain.Entities.Corporate", b =>
                {
                    b.Navigation("NotasFiscais");
                });
#pragma warning restore 612, 618
        }
    }
}
